<?xml version="1.0"?>
<Ontology xmlns="http://www.w3.org/2002/07/owl#"
     xml:base="https://OntoIT.github.io/IIoT/Device/Digital_logic.owl"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     xmlns:xml="http://www.w3.org/XML/1998/namespace"
     xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
     xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
     ontologyIRI="https://OntoIT.github.io/IIoT/Device/Digital_logic.owl">
    <Prefix name="" IRI="https://OntoIT.github.io/IIoT/Device/Digital_logic.owl"/>
    <Prefix name="owl" IRI="http://www.w3.org/2002/07/owl#"/>
    <Prefix name="rdf" IRI="http://www.w3.org/1999/02/22-rdf-syntax-ns#"/>
    <Prefix name="xml" IRI="http://www.w3.org/XML/1998/namespace"/>
    <Prefix name="xsd" IRI="http://www.w3.org/2001/XMLSchema#"/>
    <Prefix name="rdfs" IRI="http://www.w3.org/2000/01/rdf-schema#"/>
    <Annotation>
        <AnnotationProperty IRI="http://creativecommons.org/ns#license"/>
        <IRI>http://creativecommons.org/licenses/by/2.0/</IRI>
    </Annotation>
    <Annotation>
        <AnnotationProperty IRI="http://purl.org/dc/terms/contributor"/>
        <Literal>Authors: Liviana N. Tudor, Lecia Barker, Ghislain Atemezing, Mohammad Q. Azhar, Jorge Guerra, Clark Mousaw</Literal>
    </Annotation>
    <Annotation>
        <AnnotationProperty IRI="http://purl.org/dc/terms/description"/>
        <Literal xml:lang="en">Digital_logic.owl ontology includes terms about hardware platforms, logic, purpose-built devices, and smart products.</Literal>
    </Annotation>
    <Annotation>
        <AnnotationProperty IRI="http://purl.org/dc/terms/issued"/>
        <Literal xml:lang="en">2024-08-19</Literal>
    </Annotation>
    <Annotation>
        <AnnotationProperty IRI="http://purl.org/dc/terms/modified"/>
        <Literal xml:lang="en">2024-09-19</Literal>
    </Annotation>
    <Annotation>
        <AnnotationProperty IRI="http://purl.org/dc/terms/title"/>
        <Literal xml:lang="en">Digital_logic.owl ontology is an instance of the class Device (layer of the IIoT ontology)</Literal>
    </Annotation>
    <Annotation>
        <AnnotationProperty abbreviatedIRI="owl:versionInfo"/>
        <Literal xml:lang="en">Version 1.1</Literal>
    </Annotation>
    <Annotation>
        <AnnotationProperty IRI="preferredNamespacePrefix"/>
        <Literal xml:lang="en">Digital_logic</Literal>
    </Annotation>
    <Annotation>
        <AnnotationProperty IRI="preferredNamespaceUri"/>
        <IRI></IRI>
    </Annotation>
    <Declaration>
        <Class IRI="Vocabulary"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Adapter"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Algorithm"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Arduino"/>
    </Declaration>
    <Declaration>
        <Class IRI="#C"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Control_System"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Cryptographic_system"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Drone"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Eddystone"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Electrical_Grids"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Factory_Equipment"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Firmware"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Gateway"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Hardware_Platform"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Home_automation"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ICS"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Industrial_oven"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Internet_standard"/>
    </Declaration>
    <Declaration>
        <Class IRI="#JSON_Web_Token"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Java"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Mesos"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Microcontroller"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Microprocessor"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Microprocessor_Platform"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Oil_Pipeline_Control"/>
    </Declaration>
    <Declaration>
        <Class IRI="#PLC"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Particle_Photon"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Particle_cloud"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Passive_things"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Programming_Language"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Purpose-built_Device"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Python"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Raspberry_Pi"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Smart_Product"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Smartphone"/>
    </Declaration>
    <Declaration>
        <Class IRI="#XML"/>
    </Declaration>
    <Declaration>
        <Class IRI="#YARN"/>
    </Declaration>
    <Declaration>
        <Class IRI="#health-monitoring_system"/>
    </Declaration>
    <Declaration>
        <Class IRI="#iBeacon"/>
    </Declaration>
    <Declaration>
        <Class IRI="https://OntoIT.github.io/IIoT/capabilities/Operating_system"/>
    </Declaration>
    <Declaration>
        <AnnotationProperty IRI="http://creativecommons.org/ns#license"/>
    </Declaration>
    <Declaration>
        <AnnotationProperty IRI="http://purl.org/dc/terms/contributor"/>
    </Declaration>
    <Declaration>
        <AnnotationProperty IRI="http://purl.org/dc/terms/creator"/>
    </Declaration>
    <Declaration>
        <AnnotationProperty IRI="http://purl.org/dc/terms/description"/>
    </Declaration>
    <Declaration>
        <AnnotationProperty IRI="http://purl.org/dc/terms/issued"/>
    </Declaration>
    <Declaration>
        <AnnotationProperty IRI="http://purl.org/dc/terms/modified"/>
    </Declaration>
    <Declaration>
        <AnnotationProperty IRI="http://purl.org/dc/terms/title"/>
    </Declaration>
    <Declaration>
        <AnnotationProperty IRI="preferredNamespacePrefix"/>
    </Declaration>
    <Declaration>
        <AnnotationProperty IRI="preferredNamespaceUri"/>
    </Declaration>
    <SubClassOf>
        <Class IRI="#Adapter"/>
        <Class IRI="#Hardware_Platform"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Arduino"/>
        <Class IRI="#Hardware_Platform"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#C"/>
        <Class IRI="#Programming_Language"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Control_System"/>
        <Class IRI="#Purpose-built_Device"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Cryptographic_system"/>
        <Class IRI="#Algorithm"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Drone"/>
        <Class IRI="#Purpose-built_Device"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Eddystone"/>
        <Class IRI="#Smart_Product"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Electrical_Grids"/>
        <Class IRI="#Purpose-built_Device"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Factory_Equipment"/>
        <Class IRI="#Purpose-built_Device"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Firmware"/>
        <Class IRI="#Algorithm"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Gateway"/>
        <Class IRI="#Hardware_Platform"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Home_automation"/>
        <Class IRI="#Smart_Product"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ICS"/>
        <Class IRI="#Purpose-built_Device"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Industrial_oven"/>
        <Class IRI="#Purpose-built_Device"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#JSON_Web_Token"/>
        <Class IRI="#Internet_standard"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Java"/>
        <Class IRI="#Programming_Language"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Mesos"/>
        <Class IRI="https://OntoIT.github.io/IIoT/capabilities/Operating_system"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Microcontroller"/>
        <Class IRI="#Hardware_Platform"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Microprocessor"/>
        <Class IRI="#Hardware_Platform"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Microprocessor_Platform"/>
        <Class IRI="#Hardware_Platform"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Oil_Pipeline_Control"/>
        <Class IRI="#Purpose-built_Device"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#PLC"/>
        <Class IRI="#Purpose-built_Device"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Particle_Photon"/>
        <Class IRI="#Hardware_Platform"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Particle_cloud"/>
        <Class IRI="#Hardware_Platform"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Passive_things"/>
        <Class IRI="#Smart_Product"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Python"/>
        <Class IRI="#Programming_Language"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Raspberry_Pi"/>
        <Class IRI="#Hardware_Platform"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Smartphone"/>
        <Class IRI="#Hardware_Platform"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#XML"/>
        <Class IRI="#Internet_standard"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#YARN"/>
        <Class IRI="https://OntoIT.github.io/IIoT/capabilities/Operating_system"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#health-monitoring_system"/>
        <Class IRI="#Smart_Product"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#iBeacon"/>
        <Class IRI="#Smart_Product"/>
    </SubClassOf>
    <AnnotationAssertion>
        <AnnotationProperty IRI="http://purl.org/dc/terms/contributor"/>
        <AbbreviatedIRI>owl:Thing</AbbreviatedIRI>
        <Literal>Authors: Liviana N. Tudor, Lecia Barker, Ghislain Atemezing, Mohammad Q. Azhar, Jorge Guerra, Clark Mousaw</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <AbbreviatedIRI>owl:Thing</AbbreviatedIRI>
        <Literal>IDigital_logic.owl ontology includes terms about hardware platforms, logic, purpose-built devices, and smart products.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="preferredNamespaceUri"/>
        <AbbreviatedIRI>owl:Thing</AbbreviatedIRI>
        <IRI></IRI>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Adapter</IRI>
        <Literal>Adapters are gateways to external hardware platforms like Arduino and Raspberry PI.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Algorithm</IRI>
        <Literal>Algorithms for data analytics, data mining, neural networks, firmware, and tools for machine learning.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Arduino</IRI>
        <Literal>Arduino is a microcontroller based on the C++ language. Cosm and Nimbits are open platforms for storing sensor data on the Cloud.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#C</IRI>
        <Literal>Embedded programming in C or C++ for IoT platforms like Arduino, Raspberry Pi, or Particle</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Control_System</IRI>
        <Literal>A wide variety of IoT applications was developed in recent years: (a) monitoring systems (e.g., temperature control, remote healthcare), (b) industrial control systems (e.g., manufacturing processes, power grids), etc.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Cryptographic_system</IRI>
        <Literal>A set of algorithms that convert plaintext to the ciphertext to encode or decode messages securely.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Drone</IRI>
        <Literal>Drones - flying IoT devices with full network connectivity capabilities.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Eddystone</IRI>
        <Literal>iBeacon from Apple and Eddystone from Google are portable electronic devices that use network protocols such as NFC, RFID, optical tags, or BLE as hardware transmitters.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Electrical_Grids</IRI>
        <Literal>The administration of electrical grids once controlled by manual input and electrical relays have been replaced by industrial control systems (ICS).</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Factory_Equipment</IRI>
        <Literal>The administration of factory equipment is performed by the industrial control systems (ICS).</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Firmware</IRI>
        <Literal>In a Particle Photon application, a firmware program reads the value D0 of a pin, call the function Particle.publish() with one of the value “0” or “1” that is sent to the Particle cloud.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Gateway</IRI>
        <Literal>Gateways process the data from multiple devices and send them to the cloud</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Hardware_Platform</IRI>
        <Literal>Examples of hardware platforms: a) microcontroller and computer platforms; b) HATs and Shields, modules that connect processing boards to computers and other objects.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Home_automation</IRI>
        <Literal>MQTT is a network protocol used for home automation systems (network layer ontology).</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#ICS</IRI>
        <Literal>ICS (industrial control systems)</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Industrial_oven</IRI>
        <Literal>Industrial ovens for a production line incorporate temperature sensors.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Internet_standard</IRI>
        <Literal>Internet standards and tools</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#JSON_Web_Token</IRI>
        <Literal>JSON Web Token (JWT) is an Internet standard for creating data with optional signature and encryption. It has 3 parts: a header, a payload, and a signature that are encoded and concatenated to produce the JWT.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Java</IRI>
        <Literal>Java Programming for IoT Applications (e. g. IoT Java Application with Eclipse Kura)</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Mesos</IRI>
        <Literal>Mesos is a distributed operating system that runs on every machine. The Mesos kernel provides applications like Hadoop, Spark, Kafka and ensures resource management and scheduling in cloud environment.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Microcontroller</IRI>
        <Literal>CPU on a single chip; RAM, ROM, EEPROM, Timer, I/O, Serial Interface</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Microprocessor</IRI>
        <Literal>CPU and several supporting chips; RAM, ROM, Input, Output, Serial Interface, Timers</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Microprocessor_Platform</IRI>
        <Literal>Gateway devices (e.g. microprocessor platforms) enable a secure connection to the cloud and can do real-time analytics or machine learning</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Oil_Pipeline_Control</IRI>
        <Literal>Sensors are embedded into purpose-built devices such as oil pipeline control systems.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#PLC</IRI>
        <Literal>PLC (Programmable Logic Controller) is a ruggedized computer. Features: valves, sensors, motors. PLC programming languages: Ladder Logic, Function Block Diagram, Sequential Function Chart; Connection with SCADA</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Particle_Photon</IRI>
        <Literal>Edge-to-cloud platform; Connecting Photon to CMU Wi-Fi; Mini breadboard, USB cable, header</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Particle_cloud</IRI>
        <Literal>Particle cloud describes the Flow-Service-Quality semantics for a Particle Photon application using the properties &quot;wire&quot;, &quot;read&quot;, &quot;send&quot;, &quot;request&quot; and constraints based on &quot;hasTimeLimit&quot; and &quot;hasValueConnection&quot;.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Passive_things</IRI>
        <Literal>“Passive things” have sensors that do not require external power, they just react to inputs from their environment.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Programming_Language</IRI>
        <Literal>IoT devices use certain programming languages to process and control data transfer (e.g. Raspberry Pi, Programmable Logic Controller, C, Java, Python).</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Purpose-built_Device</IRI>
        <Literal>Sensors are usually incorporated into connected objects or purpose-built devices such as components of a city’s infrastructure, controllers for factory equipment, oil pipeline control, and many other applications.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Python</IRI>
        <Literal>Python programming for IoT systems uses libraries/packages such as numpy,  request, paho.mqtt.client, Countly, matplotlib, etc.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Raspberry_Pi</IRI>
        <Literal>Raspberry Pi uses operating systems such as Raspberry Pi OS, Raspbian, some versions of Linux, or Windows 10 IoT Core. Tools and programming languages: GPIO (general-purpose input/output) pins; PWM - Pulse-Width Modulation, Python, C/C++, Wyliodrin Studio</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Smart_Product</IRI>
        <Literal>Smart products are controlled and managed using Web technologies and software platforms.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Smartphone</IRI>
        <Literal>Smartphones are gateway devices that enable data connectivity through their set of sensors: GPS, biometrics, Bluetooth, heart rate monitor, ECG, barcode readers, etc.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#XML</IRI>
        <Literal>XML (Extensible Markup Language) is a markup language recommended by the W3C (World Wide Web Consortium) and used for storing unstructured and semi-structured data and transferring data between Internet applications.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#YARN</IRI>
        <Literal>Yarn (Yet Another Resource Negotiator) is a distributed operating system. YARN allows the resource management and scheduling jobs in Hadoop.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#health-monitoring_system</IRI>
        <Literal>Remote patient monitoring devices: glucometer, pulse oximeter, thermometer, ECG, digital stethoscope, wearables, scales, etc.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#iBeacon</IRI>
        <Literal>iBeacon from Apple and Eddystone from Google are portable electronic devices that use network protocols such as NFC, RFID, optical tags, or BLE as hardware transmitters.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>https://OntoIT.github.io/IIoT/capabilities/Operating_system</IRI>
        <Literal>A distributed operating system manages communication shared in a network of independent computers that possess their own memory unit and CPU. Ex: YARN, LOCUS, Mesos, etc.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>https://OntoIT.github.io/IIoT/capabilities/Operating_system</IRI>
        <Literal>Operating_system</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>https://saref.etsi.org/core/UnitOfMeasure</IRI>
        <Literal>Class UnitOfMeasure - is imported from the Saref ontology</Literal>
    </AnnotationAssertion>
</Ontology>



<!-- Generated by the OWL API (version 4.5.29.2024-05-13T12:11:03Z) https://github.com/owlcs/owlapi -->

